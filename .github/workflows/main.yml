name: CI Pipeline - Notes App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint (ESLint)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  test:
    name: Unit Test (Jest)
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci

      - name: Run Unit Tests with Coverage
        run: npm run test -- --coverage
        env:
          CI: true

  sonar:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci

      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=JuandaPatra_performance-test-app
            -Dsonar.organization=juandapatra
            -Dsonar.sources=.
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  k6:
  name: k6 Smoke Test
  runs-on: ubuntu-latest
  needs: sonar
  if: always()

  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Run k6 Smoke Test
      uses: docker://loadimpact/k6:latest
      env:
        BASE_URL: ${{ secrets.BASE_URL }}
      with:
        entrypoint: k6
        args: run tests/loadtest.js
